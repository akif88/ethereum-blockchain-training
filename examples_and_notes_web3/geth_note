****geth used for private ethereum network****

Basic step:

create initial account
geth --datadir node/ account new

create genesis.json *(insert initial accounts into "alloc" in genesis.json)
https://github.com/ethereum/go-ethereum/wiki/Private-network#creating-the-genesis-block
https://arvanaghi.com/blog/explaining-the-genesis-block-in-ethereum/

----create genesis block, initial geth *(must be same genesis.json)
---- when balance set in alloc, it must set high value, because it is wei not ether (1 ether = 10^18 wei)
---- first block mining take a lot of time to changed some standards ethash (ref: https://github.com/ethereum/wiki/wiki/Ethash)
geth --datadir local_Node1/ init genesis.json
geth --datadir local_Node2/ init genesis.json

---- for node to communicate with each other
bootnode --genkey boot.key (for generate pubkey)
bootnode --nodekey boot.key --verbosity 9 (initial bootnode)
(>INFO [08-02|01:15:02.886] UDP listener up                          self=enode://pubkey@[::]:30301) !!! * is deprecate
|||
***new out:
>INFO [02-09|04:37:59.751] New local node record                    seq=1 id=ae70cd41dd436852 ip=<nil> udp=0 tcp=0
end for pubkey: > bootnode --nodekey boot.key --writeaddress

---- start node 1 with bootnode (rpcapi: web3 APIs to be used)
geth --networkid 35710 --datadir local_Node1/ --bootnodes enode://pubkey@node1_IP:30301
--rpc --rpcport 8545 --rpcapi web3,admin,personal,eth,miner  --port 30317  console

---- start node 2 with bootnode *(rpcport and port must be different if node IP is same)
geth --networkid 35710 --datadir local_Node1/ --bootnodes enode://pubkey@node2_IP:30301
--rpc --rpcport 8546 --rpcapi web3,admin,personal,eth,miner  --port 30318  console

